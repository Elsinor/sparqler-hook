import pprint
import requests
import urllib
import json



if Hook['params'].has_key('name'):
  name = Hook['params']['name']

  q = """PREFIX dbo: <http://dbpedia.org/ontology/>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX dbr: <http://dbpedia.org/resource/>
  PREFIX dbp: <http://dbpedia.org/property/>
  select distinct ?theatre ?comment ?abstract ?thumbnail ?architect ?since ?label
  where {
  ?theatre rdf:type dbo:Building . 
  ?theatre rdfs:label ?label .
  ?theatre rdfs:comment ?comment .
  ?theatre dbo:abstract ?abstract .
  ?theatre dbo:thumbnail ?thumbnail .
  ?theatre dbp:architect ?architect .
  ?theatre dbp:opened ?since .

  filter(str(?label)=\""""+name+"""\")
 }
 """


  params = {"query":q}
  ash = urllib.urlencode(params)

  DBpedia = "http://dbpedia.org/sparql?"+ash+"&format=json&run=+Run+Query+"

  #DBlink = DBpedia['value']


  r = requests.get(DBpedia)
  results = json.loads(r.text)
 
  
  theatres = {}

  for result in results["results"]["bindings"]:

    if result['theatre'].has_key('value'):

      resource = result['theatre']['value']

      desc = ''
      comment = ''
      
      if result.has_key('label'):
        name = result['label']['value']
        lang = result['label']['xml:lang']      

        if result.has_key('abstract'):
          desc = result['abstract']['value']

        if result.has_key('comment'):
          comment = result['comment']['value']

        if theatres.has_key(resource):
          theatres[resource]['name'][lang] = name
          theatres[resource]['desc'][lang] = desc
          theatres[resource]['comment'][lang] = comment
        else:
          theatres[resource] = {}
          theatres[resource]['name'] = {}
          theatres[resource]['desc'] = {}
          theatres[resource]['comment'] = {}
          theatres[resource]['name'][lang] = name
          theatres[resource]['desc'][lang] = desc
          theatres[resource]['comment'][lang] = comment

          if result.has_key('thumbnail'):
            #theatre['img'] = result["thumbnail"]["value"]
            img = result['thumbnail']['value']
            theatres[resource]['img'] = img
         
          if result.has_key('architect'):
            architect = result['architect']['value']
        
          if result.has_key('since'):
            since = result['since']['value']

  theatres = json.dumps(theatres)
  #print(r.text)
  print(theatres)
  
else:
  print("no label")




  
